// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Charity {
  ukCharityNumber String                 @id
  members         CharityMembership[]
  links         CharityLink[]
  tags         CharityTag[]
  countriesActive         CharityCountry[]
  projects         Project[]
  charityName     String
  email           String
  about String @db.LongText
}

model CharityCountry {
  id        String   @id @default(uuid())
  charityId String
  value     Country 
  charity     Charity @relation(fields: [charityId], references: [ukCharityNumber], onDelete: Cascade)

  @@unique([charityId, value])
}

model CharityTag {
  id        String   @id @default(uuid())
  charityId String
  value     TagValue
  charity     Charity @relation(fields: [charityId], references: [ukCharityNumber], onDelete: Cascade)

  @@unique([charityId, value])
}

model CharityLink {
  id          String  @id @default(uuid())
  webLink         String
  socialMedia String // Type of link, e.g., social media, website, etc.
  charityId   String // Foreign key reference to the Project model
  charity     Charity @relation(fields: [charityId], references: [ukCharityNumber], onDelete: Cascade)
}

model CharityMembership {
  id        String  @id @default(uuid())
  userId    String
  charityId String
  charityHead Boolean
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  charity   Charity @relation(fields: [charityId], references: [ukCharityNumber], onDelete: Cascade)
  @@unique([userId, charityId])
}
model ProjectMembership {
  id        String  @id @default(uuid())
  userId    String
  projectId String
  projectLead Boolean
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  @@unique([userId, projectId])
}


// TODO (Fergus): multipage signup form for extra info such as bio, soc media links (redux)
model User {
  id       String              @id @default(uuid())
  firstname String
  lastname String
  password String
  email    String              @unique
  userType UserType // This field determines whether the user is a Donor or a Charity
  updates ProjectUpdate[]
  charity  CharityMembership[]
    projects ProjectMembership[]
    transactions          Transaction[]
}

model Project {
  id      String  @id @default(uuid())
  title   String
  country String? @default("Unknown")
  charityId String
  backgroundAndGoals     String @db.LongText // A description of the challenge the project is addressing
  solution      String @db.LongText // The proposed solution for the challenge
  donationUsage String @db.LongText // A description of how the donations will be used
  subtitle  String // The anticipated future impact or end result of the project
  link          Link[] // Stores various links related to the project
  transactions          Transaction[] // Stores various links related to the project
  tag           Tag[] // Stores various tags related to the project
  updates ProjectUpdate[]
  members ProjectMembership[]
  targetAmount  Float // The fundraising goal for the project
  currentAmount Float // The current money raised
  // userId        String // Foreign key reference to the User model
  startDate     DateTime @default(now()) // Auto-generated field capturing today's date
  endDate       DateTime // This field should be set to a date after startDate
    charity   Charity @relation(fields: [charityId], references: [ukCharityNumber], onDelete: Cascade)
}

model ProjectUpdate {
    id      String  @id @default(uuid())
      text     String @db.LongText // text within the update which is displayed

  userId        String // Foreign key reference to the User model
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    projectId   String // Foreign key reference to the Project model
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Link {
  id          String  @id @default(uuid())
  webLink         String
  socialMedia String // Type of link, e.g., social media, website, etc.
  projectId   String // Foreign key reference to the Project model
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

// TODO: onDelete of project, does transaction get deleted?
model Transaction {
  id          String  @id @default(uuid())
  type         String
    whatFor         String
  whatBrought         String
  amount         Float
  projectId   String // Foreign key reference to the Project model
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  posterId   String // Foreign key reference to the Project model
  poster     User @relation(fields: [posterId], references: [id], onDelete: NoAction) // TODO: bug - deletion of account will be restricted noAction isn't working for MySQL
  dateTime     DateTime @default(now())
}



model Tag {
  id        String   @id @default(uuid())
  projectId String // Foreign key reference to the Project model
  value     TagValue // Enum for predefined tag values
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([projectId, value])
}

// Enum to represent the type of the user
enum UserType {
  DONOR
  CHARITY
}
// Enum to represent the type of the user
enum CharityUserType {
  CHARITYHEAD
  PROJECTLEAD
  PROJECTWORKER
}

// Allowed values for tags
enum TagValue {
  Farming
  Wildlife
  Business
  Climate
  Community
  Crisis
  Culture
  Development
  Economy
  Energy
  Environment
  Food
  Healthcare
  Housing
  HumanRights
  Innovation
  Medical
  Security
  Sports
  Technology
  Women
  Youth
  Rewilding
  ElderCare
  Education
  CleanWater
}

enum Country {
  AD
  AE
  AF
  AG
  AI
  AL
  AM
  AO
  AQ
  AR
  AS
  AT
  AU
  AW
  AX
  AZ
  BA
  BB
  BD
  BE
  BF
  BG
  BH
  BI
  BJ
  BL
  BM
  BN
  BO
  BR
  BS
  BT
  BV
  BW
  BY
  BZ
  CA
  CC
  CD
  CF
  CG
  CH
  CI
  CK
  CL
  CM
  CN
  CO
  CR
  CU
  CV
  CW
  CX
  CY
  CZ
  DE
  DJ
  DK
  DM
  DO
  DZ
  EC
  EE
  EG
  EH
  ER
  ES
  ET
  FI
  FJ
  FK
  FM
  FO
  FR
  GA
  GB
  GD
  GE
  GF
  GG
  GH
  GI
  GL
  GM
  GN
  GP
  GQ
  GR
  GS
  GT
  GU
  GW
  GY
  HK
  HM
  HN
  HR
  HT
  HU
  ID
  IE
  IL
  IM
  IN
  IO
  IQ
  IR
  IS
  IT
  JE
  JM
  JO
  JP
  KE
  KG
  KH
  KI
  KM
  KN
  KP
  KR
  KW
  KY
  KZ
  LA
  LB
  LC
  LI
  LK
  LR
  LS
  LT
  LU
  LV
  LY
  MA
  MC
  MD
  ME
  MF
  MG
  MH
  MK
  ML
  MM
  MN
  MO
  MP
  MQ
  MR
  MS
  MT
  MU
  MV
  MW
  MX
  MY
  MZ
  NA
  NC
  NE
  NF
  NG
  NI
  NL
  NO
  NP
  NR
  NU
  NZ
  OM
  PA
  PE
  PF
  PG
  PH
  PK
  PL
  PM
  PN
  PR
  PS
  PT
  PW
  PY
  QA
  RE
  RO
  RS
  RU
  RW
  SA
  SB
  SC
  SD
  SE
  SG
  SH
  SI
  SJ
  SK
  SL
  SM
  SN
  SO
  SR
  SS
  ST
  SV
  SX
  SY
  SZ
  TC
  TD
  TF
  TG
  TH
  TJ
  TK
  TL
  TM
  TN
  TO
  TR
  TT
  TV
  TW
  TZ
  UA
  UG
  US
  UY
  UZ
  VA
  VC
  VE
  VG
  VI
  VN
  VU
  WF
  WS
  XK
  YE
  YT
  ZA
  ZM
  ZW
}